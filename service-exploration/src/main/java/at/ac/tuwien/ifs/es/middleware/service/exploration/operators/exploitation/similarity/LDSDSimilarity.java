package at.ac.tuwien.ifs.es.middleware.service.exploration.operators.exploitation.similarity;

import at.ac.tuwien.ifs.es.middleware.service.exploration.context.resources.pairs.ResourcePairList;
import at.ac.tuwien.ifs.es.middleware.kg.abstraction.rdf.ResourcePair;
import at.ac.tuwien.ifs.es.middleware.service.exploration.operators.payload.VoidPayload;
import at.ac.tuwien.ifs.es.middleware.service.analysis.similarity.ldsd.LinkedDataSemanticDistanceMetricService;
import at.ac.tuwien.ifs.es.middleware.service.exploration.operators.exploitation.ExploitationOperator;
import at.ac.tuwien.ifs.es.middleware.service.exploration.RegisterForExplorationFlow;
import com.fasterxml.jackson.core.JsonPointer;
import com.fasterxml.jackson.databind.node.JsonNodeFactory;
import com.fasterxml.jackson.databind.node.ValueNode;
import java.util.List;
import java.util.stream.Collectors;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Lazy;
import org.springframework.stereotype.Component;

@Lazy
@Component
@RegisterForExplorationFlow(LDSDSimilarity.OID)
public class LDSDSimilarity implements
    ExploitationOperator<ResourcePairList, ResourcePairList, VoidPayload> {

  public static final String OID = "esm.exploit.sim.ldsd";

  private static final JsonPointer VALUES_PTR = JsonPointer.compile("/similarity/" + OID);

  private final LinkedDataSemanticDistanceMetricService ldsdMetricService;

  @Autowired
  public LDSDSimilarity(LinkedDataSemanticDistanceMetricService ldsdMetricService) {
    this.ldsdMetricService = ldsdMetricService;
  }

  @Override
  public String getUID() {
    return OID;
  }

  @Override
  public Class<ResourcePairList> getExplorationContextInputClass() {
    return ResourcePairList.class;
  }

  @Override
  public Class<ResourcePairList> getExplorationContextOutputClass() {
    return ResourcePairList.class;
  }

  @Override
  public Class<VoidPayload> getPayloadClass() {
    return VoidPayload.class;
  }

  @Override
  public ResourcePairList apply(ResourcePairList context, VoidPayload payload) {
    ResourcePairList resourcePairList = (ResourcePairList) context;
    List<ResourcePair> resourcePairs = resourcePairList.streamOfResults()
        .collect(Collectors.toList());
    for (ResourcePair resource : resourcePairs) {
      ValueNode ldsdValue = JsonNodeFactory.instance
          .numberNode(ldsdMetricService.getValueFor(resource));
      context.values().put(resource.getId(), VALUES_PTR, ldsdValue);
    }
    return context;
  }
}