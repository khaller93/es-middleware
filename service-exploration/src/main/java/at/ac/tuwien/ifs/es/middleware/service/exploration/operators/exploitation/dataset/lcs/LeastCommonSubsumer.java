package at.ac.tuwien.ifs.es.middleware.service.exploration.operators.exploitation.dataset.lcs;

import at.ac.tuwien.ifs.es.middleware.kg.abstraction.rdf.ResourcePair;
import at.ac.tuwien.ifs.es.middleware.service.analysis.dataset.hierarchy.classes.lca.LowestCommonAncestorService;
import at.ac.tuwien.ifs.es.middleware.service.exploration.RegisterForExplorationFlow;
import at.ac.tuwien.ifs.es.middleware.service.exploration.context.resources.pairs.ResourcePairList;
import at.ac.tuwien.ifs.es.middleware.service.exploration.operators.exploitation.ExploitationOperator;
import at.ac.tuwien.ifs.es.middleware.service.exploration.operators.payload.VoidPayload;
import com.fasterxml.jackson.core.JsonPointer;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Lazy;
import org.springframework.stereotype.Component;

@Lazy
@Component
@RegisterForExplorationFlow(LeastCommonSubsumer.OID)
public class LeastCommonSubsumer implements
    ExploitationOperator<ResourcePairList, ResourcePairList, VoidPayload> {

  public static final String OID = "esm.resource.pair.lcs";

  private static final JsonPointer dataPointer = JsonPointer.compile("/" + OID);

  private final LowestCommonAncestorService lowestCommonAncestorService;
  private final ObjectMapper objectMapper;

  @Autowired
  public LeastCommonSubsumer(LowestCommonAncestorService lowestCommonAncestorService,
      ObjectMapper objectMapper) {
    this.lowestCommonAncestorService = lowestCommonAncestorService;
    this.objectMapper = objectMapper;
  }

  @Override
  public String getUID() {
    return OID;
  }

  @Override
  public Class<ResourcePairList> getExplorationContextInputClass() {
    return ResourcePairList.class;
  }

  @Override
  public Class<ResourcePairList> getExplorationContextOutputClass() {
    return ResourcePairList.class;
  }

  @Override
  public Class<VoidPayload> getPayloadClass() {
    return VoidPayload.class;
  }

  @Override
  public ResourcePairList apply(ResourcePairList context, VoidPayload payload) {
    for (ResourcePair pair : context) {
      context.values().put(pair.getId(), dataPointer,
          objectMapper.valueToTree(lowestCommonAncestorService.getLowestCommonAncestor(pair)));
    }
    return context;
  }
}
