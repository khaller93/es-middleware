package at.ac.tuwien.ifs.es.middleware.service.exploration.operators.exploitation;

import at.ac.tuwien.ifs.es.middleware.dto.exploration.context.ResultCollectionContext;
import at.ac.tuwien.ifs.es.middleware.service.exploration.operators.payload.exploitation.CountResultsPayload;
import at.ac.tuwien.ifs.es.middleware.service.exploration.registry.RegisterForExplorationFlow;
import com.fasterxml.jackson.databind.node.JsonNodeFactory;
import org.springframework.context.annotation.Lazy;
import org.springframework.stereotype.Component;

/**
 * This operator counts the number of results in a {@link ResultCollectionContext} and stores the
 * result of the count to the metadata {@link at.ac.tuwien.ifs.es.middleware.dto.exploration.context.util.box.ValueBox}
 * under the name specified in given {@link CountResultsPayload}.
 *
 * @author Kevin Haller
 * @version 1.0
 * @since 1.0
 */
@Lazy
@Component
@RegisterForExplorationFlow(CountResults.OID)
public class CountResults implements
    ExploitationOperator<ResultCollectionContext, ResultCollectionContext, CountResultsPayload> {

  public static final String OID = "esm.exploit.result.collection.count";

  @Override
  public String getUID() {
    return CountResults.OID;
  }

  @Override
  public Class<ResultCollectionContext> getExplorationContextInputClass() {
    return ResultCollectionContext.class;
  }

  @Override
  public Class<ResultCollectionContext> getExplorationContextOutputClass() {
    return ResultCollectionContext.class;
  }

  @Override
  public Class<CountResultsPayload> getPayloadClass() {
    return CountResultsPayload.class;
  }

  @Override
  public ResultCollectionContext apply(ResultCollectionContext context,
      CountResultsPayload payload) {
    context.metadata().put(payload.getPath(), JsonNodeFactory.instance.numberNode(context.size()));
    return context;
  }
}
