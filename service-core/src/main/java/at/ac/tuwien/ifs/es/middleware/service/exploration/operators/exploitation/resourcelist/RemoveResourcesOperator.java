package at.ac.tuwien.ifs.es.middleware.service.exploration.operators.exploitation.resourcelist;

import at.ac.tuwien.ifs.es.middleware.common.exploration.context.resources.ResourceList;
import at.ac.tuwien.ifs.es.middleware.common.exploration.context.result.Resource;
import at.ac.tuwien.ifs.es.middleware.service.exploration.operators.exploitation.ExploitationOperator;
import at.ac.tuwien.ifs.es.middleware.service.exploration.operators.payload.acquisition.RemoveResourcesPayload;
import at.ac.tuwien.ifs.es.middleware.common.exploration.RegisterForExplorationFlow;
import java.util.Collections;
import java.util.Set;
import org.springframework.context.annotation.Lazy;
import org.springframework.stereotype.Component;

/**
 * This is an implementation of {@link ExploitationOperator} that removes resources from a given
 * {@link ResourceList}.
 *
 * @author Kevin Haller
 * @version 1.0
 * @since 1.0
 */
@Lazy
@Component
@RegisterForExplorationFlow(RemoveResourcesOperator.OID)
public class RemoveResourcesOperator implements
    ExploitationOperator<ResourceList, ResourceList, RemoveResourcesPayload> {

  public static final String OID = "esm.source.resourcelist.remove";

  @Override
  public String getUID() {
    return OID;
  }

  @Override
  public Class<ResourceList> getExplorationContextInputClass() {
    return ResourceList.class;
  }

  @Override
  public Class<ResourceList> getExplorationContextOutputClass() {
    return ResourceList.class;
  }

  @Override
  public Class<RemoveResourcesPayload> getPayloadClass() {
    return RemoveResourcesPayload.class;
  }

  @Override
  public ResourceList apply(ResourceList resourceListContext, RemoveResourcesPayload payload) {
    if (!payload.getResources().isEmpty()) {
      Set<Resource> resourcesToRemove =
          payload.getResources() != null ? payload.getResources() : Collections.emptySet();
      return (ResourceList) resourceListContext.streamOfResults()
          .filter(r -> !resourcesToRemove.contains(r))
          .collect(resourceListContext.collector());
    }
    return resourceListContext;
  }
}
