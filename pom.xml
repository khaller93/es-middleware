<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.1.1.RELEASE</version>
  </parent>
  <groupId>at.ac.tuwien.ifs.exploratorysearch</groupId>
  <artifactId>middleware</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Exploratory Search Microservice (multi-module)</name>
  <description>
    This micro service enables methods for exploratory search in a certain knowledge graph.
  </description>

  <organization>
    <name>Vienna University of Technology, IFS</name>
    <url>https://www.ifs.tuwien.ac.at/</url>
  </organization>

  <developers>
    <developer>
      <id>khaller</id>
      <name>Kevin Haller</name>
      <email>kevin.haller@tuwien.ac.at</email>
      <timezone>CET</timezone>
    </developer>
  </developers>

  <properties>
    <java.version>1.8</java.version>
    <rdf4j.version>2.4.2</rdf4j.version>
    <tinkerpop.version>3.4.0</tinkerpop.version>
    <apache-commons-rdf.version>0.5.0</apache-commons-rdf.version>
    <apache-commons-text.version>1.6</apache-commons-text.version>
    <guava.version>27.0.1-jre</guava.version>
    <docker.spotify.plugin.version>1.4.9</docker.spotify.plugin.version>
    <docker.image.prefix>ess</docker.image.prefix>
  </properties>

  <modules>
    <module>appcore</module>
    <module>servicecore</module>
    <module>daocore</module>
    <module>dto</module>
    <module>dao-rdf4j</module>
    <module>dao-graphdb</module>
    <module>dao-blazegraph</module>
    <module>dao-stardog</module>
    <module>dao-janusgraph</module>
    <module>testutil</module>
    <module>dockerutil</module>
    <module>sparql-builder</module>
  </modules>

  <dependencies>
    <!-- Spring boot -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <!-- Testing -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>${project.artifactId}</finalName>
    <plugins>
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>dockerfile-maven-plugin</artifactId>
        <version>${docker.spotify.plugin.version}</version>
        <configuration>
          <repository>${docker.image.prefix}/exploratory-search-service</repository>
          <tag>${project.version}</tag>
          <skip>true</skip>
          <buildArgs>
            <JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
          </buildArgs>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>